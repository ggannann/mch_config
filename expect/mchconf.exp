#!/usr/bin/expect --
#
#  Copyright (c) 2019           European Spallation Source ERIC
#
#  The program is free software: you can redistribute
#  it and/or modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation, either version 2 of the
#  License, or any newer version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#  more details.
#
#  You should have received a copy of the GNU General Public License along with
#  this program. If not, see https://www.gnu.org/licenses/gpl-2.0.txt
#
#   author  : Jeong Han Lee
#   email   : jeonghan.lee@gmail.com
#   date    : Thursday, February 14 12:24:48 CET 2019
#   version : 0.0.1


set timeout 5
set ntpserver "174.16.6.38"
set malmo_ntpserver "194.58.204.20"

set prompt "\n\r\nnat> ";
set mchcfgprompt "Enter configuration mode (RET=\*): ";
set ntpprompt1   "Enable Time client (y/n) (RET=\*): ";
set ntpprompt2   "SNTP (y) or Time Protocol (n) (RET=\*): ";
set ntpprompt3   "Enter Time server IP (dot notation): \*.\*.\*.\*";
set ntpprompt4   "Enter 'Check for Time' delay (dec, minutes) (RET=\*): "
set ntpprompt5   "Enter 'Check for Time' delay (dec, hours) (RET=\*): " 
set ntpprompt6   "Enter local time offset (dec, hours) (RET=\*): "

# MCH is slow not to understand the machine send command
# So, we have to put some delay between characters.
# 
# Send strings with .1 second in between each 1 characters sent
#
set send_slow {1 .1}

#
# MOXA Server IP
#
set ip [lindex $argv 0]
#
# MOXA Server PORT
#
set port [lindex $argv 1]
#
# MCH Configuration Commands File
#
#set commands_file [lindex $argv 0]

# #
# # Read all command sequence from a file to save them into
# #
# set input [open "$commands_file" r]
# set lines [split [read -nonewline $input] "\n"]
# foreach line $lines {
#     puts $line
# }

proc dialog {expstring send } {
    expect {
	$expstring {
	    sleep .1;
	    exp_send -s "$send\r"
	    sleep 1;
	}
	-gl "timeout" {
	    expect *
	    error "Timed out" \
		"Expected: $expstring. Saw: $expect_out(buffer)"
	}
	eof {
	    expect *
	    error "Connection Closed" \
		"Expected: $expstring. Saw: $expect_out(buffer)"
	}
    }
}
      

# Connect the MOXA serial port
exp_spawn telnet $ip $port

dialog "Escape character is '^\]'.\r" ""

# foreach line $lines {
#     dialog "$prompt" "$line"
# }

# exp_internal 1
dialog "$prompt" "mchcfg"

dialog "$mchcfgprompt" "10"
dialog "$ntpprompt1" "y"
dialog "$ntpprompt2" "n"
dialog "$ntpprompt3" "\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010 $ntpserver"
dialog "$ntpprompt4" "0"
dialog "$ntpprompt5" "0"
dialog "$ntpprompt6" "0"
dialog "$mchcfgprompt" "q"
#
# Sleep is needed for MCH processing time
#
sleep 5;

dialog "$prompt" "ntpdate $ntpserver"


expect eof

